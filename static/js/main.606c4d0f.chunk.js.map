{"version":3,"sources":["types/TodoFilterBy.ts","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoFilterBy","Loader","className","TodoList","props","selectedTodoId","selectedTodo","filteredList","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","setQuery","filter","setFilter","value","onChange","target","NONE","ACTIVE","COMPLETED","placeholder","e","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setTodoId","useState","user","setUser","useEffect","userId","href","email","name","App","todos","setTodos","todoId","loading","setLoading","find","toLowerCase","includes","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.606c4d0f.chunk.js","sourcesContent":["export enum TodoFilterBy {\n  NONE = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodoId: (v: number) => void,\n  selectedTodo: Todo | undefined,\n  filteredList: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { selectedTodoId, selectedTodo, filteredList } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredList.map((todo) => {\n          return (\n            !todo\n              ? <Loader />\n              : (\n                <tr\n                  key={todo.id}\n                  data-cy=\"todo\"\n                  className={classNames(selectedTodo\n                    && selectedTodo.id === todo.id\n                     && 'has-background-info-light')}\n                >\n                  <td className=\"is-vcentered\">{todo.id}</td>\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className={classNames(\n                        todo.completed && 'fas fa-check',\n                      )}\n                      />\n                    </span>\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={classNames(todo.completed\n                      ? 'has-text-success'\n                      : 'has-text-danger')}\n                    >\n                      { todo.title }\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => selectedTodoId(todo.id)}\n                    >\n                      <span className=\"icon\">\n                        <i className={classNames(selectedTodo?.id === todo.id\n                          ? 'far fa-eye-slash'\n                          : 'far fa-eye')}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              )\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { TodoFilterBy } from '../../types/TodoFilterBy';\n\ntype Props = {\n  setFilter: (newFilter: TodoFilterBy) => void,\n  setQuery: (query: string) => void,\n  filter: string,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    query, setQuery, filter, setFilter,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={\n              ({ target }) => setFilter(target.value as TodoFilterBy)\n            }\n          >\n            <option value={TodoFilterBy.NONE}>All</option>\n            <option value={TodoFilterBy.ACTIVE}>Active</option>\n            <option value={TodoFilterBy.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => {\n            setQuery(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo;\n  setTodoId: (todo: number) => void,\n}\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { selectedTodo, setTodoId } = props;\n  const [user, setUser] = useState<User | null>(null);\n  const onClose = () => {\n    setTodoId(0);\n  };\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      { (selectedTodo == null || user === null) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoFilterBy } from './types/TodoFilterBy';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(TodoFilterBy.NONE);\n\n  const selectedTodo = (todos.find(todo => todo.id === todoId));\n  const filteredList = todos.filter(todo => todo.title.toLowerCase()\n    .includes(query.toLowerCase())).filter(todo => {\n    switch (filter) {\n      case TodoFilterBy.ACTIVE:\n        return !todo.completed;\n      case TodoFilterBy.COMPLETED:\n        return todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                filter={filter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList\n                selectedTodoId={setTodoId}\n                selectedTodo={selectedTodo}\n                filteredList={filteredList}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && <TodoModal selectedTodo={selectedTodo} setTodoId={setTodoId} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}